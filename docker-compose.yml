services:

  # Main Golang web server (your primary development target)
  # main-server:
  #   build: 
  #     context: ./main-server
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8080:8080"
  #   environment:
  #     - PORT=8080
  #     - DB_HOST=postgres
  #     - DB_PORT=5432
  #     - DB_USER=appuser
  #     - DB_PASSWORD=apppassword
  #     - DB_NAME=appdb
  #     - S3_ENDPOINT=
  #     - ONBOARDING_SERVICE_URL=http://onboarding-server:8080
  #     - STATIC_FILES_URL=http://static-server:8080
  #     - PROMETHEUS_ENABLED=true
  #   depends_on:
  #     - postgres
  #     - onboarding-server
  #   volumes:
  #     - "./main-server:/app"  # Mount for live development
  #   networks:
  #     - app-network
  #   # Commented out restart so you can control this service manually
  #   # restart: unless-stopped

  # Static file server (nginx)
  static-server:
    image: nginx:alpine
    ports:
      - "8082:80"
    volumes:
      - "./static:/usr/share/nginx/html:ro"
      - "./nginx.conf:/etc/nginx/nginx.conf:ro"
    networks:
      - app-network
    restart: unless-stopped

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=appdb
      - POSTGRES_USER=appuser
      - POSTGRES_PASSWORD=apppassword
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: unless-stopped

volumes:
  postgres-data:

networks:
  app-network:
    driver: bridge
